//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LicenseServer.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("LicenseServer.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT a.CompanyName, b.LicenseType, b.SqlServer, b.LicenseKey FROM Customers a
        ///JOIN License b ON a.Id = b.CustomersId
        ///WHERE a.Id = @id.
        /// </summary>
        internal static string GetLicensDetails {
            get {
                return ResourceManager.GetString("GetLicensDetails", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to INSERT INTO Contact ([Title], [Phone], [Email], [CustomersId], [FullName]) 
        ///VALUES (@title, @phone, @email, @customerid, @fullname).
        /// </summary>
        internal static string InsertIntoContact {
            get {
                return ResourceManager.GetString("InsertIntoContact", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to INSERT INTO Customers ([CompanyName],[Address],[DateCreated],[City],[StateProvince],[Country],[ZipCode]) 
        ///VALUEs (@companyName,@address,@datecreated,@city,@stateprovice,@country,@zipcode)
        ///.
        /// </summary>
        internal static string InsertIntoCustomer {
            get {
                return ResourceManager.GetString("InsertIntoCustomer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to INSERT INTO License ([Product], [LicenseType], [LicenseKey], [LicenseCount],[Database], [DateCreated], [ExpiryDate], [CustomersId])
        ///VALUES (@product, @licensetype, @licensekey, @licensecount, @database, @datecreated, @expirydate, @customerid).
        /// </summary>
        internal static string InsertIntoLicense {
            get {
                return ResourceManager.GetString("InsertIntoLicense", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to select count(*) from TabProductList a 
        ///join licenseType b on a.[Id] = b.[TabProductListId]
        ///where a.Id = @productid and b.Enum = @enumid
        ///.
        /// </summary>
        internal static string IsProductAndTypeExist {
            get {
                return ResourceManager.GetString("IsProductAndTypeExist", resourceCulture);
            }
        }
    }
}
